package com.ajayvamsee.activenoise;

import java.util.Arrays;

public class FFTHelper {

    int block_shift = 128;
    int block_length = 512;
    int audioLength = 1106754;
    float[] in_buffer;

    int num_blocks = (audioLength - (block_length - block_shift)) / block_shift;

    float[] floatSignal =
            {2.28025f, 1.32888f, 0.39326f, -0.49619f, -1.31121f, -2.02672f, -2.62174f, -3.08015f,
                    -3.39124f, -3.55077f, -3.55763f, -3.42069f, -3.15151f, -2.76733f, -2.28963f,
                    -1.74326f, -1.15541f, -0.55456f, 0.03068f, 0.57271f, 1.04606f, 1.42835f, 1.7122f,
                    1.85105f, 1.86948f, 1.75376f, 1.50688f, 1.13742f, 0.65924f, 0.09094f, -0.54489f,
                    -1.22254f, -1.91419f, -2.59102f, -3.22433f, -3.78672f, -4.25312f, -4.60188f,
                    -4.81556f, -4.8817f, -4.79336f, -4.54939f, -4.15456f, -3.61943f, -2.95996f,
                    -2.19702f, -1.35554f, -0.46368f, 0.44824f, 1.34888f, 2.20699f, 2.99264f, 3.6783f,
                    4.23987f, 4.65761f, 4.91685f, 5.00855f, 4.92967f, 4.68323f, 4.27822f, 3.72929f,
                    3.05615f, 2.28286f, 1.43692f, 0.54824f, -0.35197f, -1.23239f, -2.06272f, -2.81485f,
                    -3.46385f, -3.9889f, -4.37404f, -4.60875f, -4.68828f, -4.61378f, -4.39223f, -4.03611f,
                    -3.56286f, -2.99417f, -2.3551f, -1.67308f, -0.97682f, -0.29515f, 0.3441f, 0.91522f,
                    1.3956f, 1.76664f, 2.01448f, 2.13052f, 2.1118f, 1.96104f, 1.68661f, 1.30214f, 0.826f,
                    0.28055f, -0.3087f, -0.91416f, -1.50721f, -2.05935f, -2.54337f, -2.93442f, -3.21099f,
                    -3.35583f, -3.35666f, -3.20667f, -2.90487f, -2.45619f, -1.87128f, -1.16626f, -0.36208f,
                    0.51622f, 1.44039f, 2.38004f, 3.30375f, 4.18023f, 4.97949f, 5.67398f, 6.23957f, 6.65652f,
                    6.91015f, 6.99145f, 6.89738f, 6.631f, 6.20138f, 5.62319f, 4.91623f, 4.10463f, 3.216f};


    double[] signal = {2.28025, 1.32888, 0.39326, -0.49619, -1.31121, -2.02672, -2.62174,
            -3.08015, -3.39124, -3.55077, -3.55763, -3.42069, -3.15151,
            -2.76733, -2.28963, -1.74326, -1.15541, -0.55456, 0.03068,
            0.57271, 1.04606, 1.42835, 1.7122, 1.85105, 1.86948, 1.75376,
            1.50688, 1.13742, 0.65924, 0.09094, -0.54489, -1.22254,
            -1.91419, -2.59102, -3.22433, -3.78672, -4.25312, -4.60188,
            -4.81556, -4.8817, -4.79336, -4.54939, -4.15456, -3.61943,
            -2.95996, -2.19702, -1.35554, -0.46368, 0.44824, 1.34888,
            2.20699, 2.99264, 3.6783, 4.23987, 4.65761, 4.91685, 5.00855,
            4.92967, 4.68323, 4.27822, 3.72929, 3.05615, 2.28286, 1.43692,
            0.54824, -0.35197, -1.23239, -2.06272, -2.81485, -3.46385,
            -3.9889, -4.37404, -4.60875, -4.68828, -4.61378, -4.39223,
            -4.03611, -3.56286, -2.99417, -2.3551, -1.67308, -0.97682,
            -0.29515, 0.3441, 0.91522, 1.3956, 1.76664, 2.01448, 2.13052,
            2.1118, 1.96104, 1.68661, 1.30214, 0.826, 0.28055, -0.3087,
            -0.91416, -1.50721, -2.05935, -2.54337, -2.93442, -3.21099,
            -3.35583, -3.35666, -3.20667, -2.90487, -2.45619, -1.87128,
            -1.16626, -0.36208, 0.51622, 1.44039, 2.38004, 3.30375,
            4.18023, 4.97949, 5.67398, 6.23957, 6.65652, 6.91015, 6.99145,
            6.89738, 6.631, 6.20138, 5.62319, 4.91623, 4.10463, 3.216};

    float[] toFloatArray(double[] arr) {
        if (arr == null) return null;
        int n = arr.length;
        float[] ret = new float[n];
        for (int i = 0; i < n; i++) {
            ret[i] = (float) arr[i];
        }
        return ret;
    }


    public void blockShift() {

        for (int i = 0; i < num_blocks; i++) {

            floatSignal = Arrays.copyOfRange(floatSignal, 128,(floatSignal.length - 128));

            float[] part1 = new float[512];
            part1=Arrays.copyOfRange(part1, 127,511 );
            part1=Arrays.copyOfRange(floatSignal,383,511);

        }


    }
}